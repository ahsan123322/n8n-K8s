# Simplified setup with internal Redis only
# Following 8gears/n8n-helm-chart standard format v1.0.0+

image:
  repository: 8gears.container-registry.com/ops/n8n
  tag: 1.81.4
imagePullSecrets:
  - name: 8gears-registry-n8n

# Global node selector for all components
nodeSelector:
  server: n8n

# Enable scaling for queue mode with webhook instances
scaling:
  enabled: true
  worker:
    replicaCount: 3
  webhook:
    enabled: true
    replicaCount: 1

# Enable INTERNAL Redis configuration
redis:
  enabled: true  # This enables the internal Redis server
  # No need to specify host/password - handled automatically by the chart

# Disable external Valkey/Redis since using internal
valkey:
  enabled: false

# Worker configuration - simplified since Redis is internal
worker:
  enabled: true
  nodeSelector:
    server: n8n
  resources:
    limits:
      memory: 1536Mi
    requests:
      memory: 256Mi
  # Worker config - queue mode will use internal Redis automatically
  config:
    executions:
      mode: queue
  
  # Worker probes (optional)
  livenessProbe:
    httpGet:
      path: /healthz
      port: 5678
    initialDelaySeconds: 45
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 5
  
  readinessProbe:
    httpGet:
      path: /healthz
      port: 5678
    initialDelaySeconds: 20
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

# Webhook configuration - simplified
webhook:
  enabled: true
  nodeSelector:
    server: n8n
  resources:
    limits:
      memory: 1024Mi
    requests:
      memory: 256Mi
  # Webhook config - queue mode will use internal Redis automatically
  config:
    executions:
      mode: queue
  
  # Webhook probes (optional)
  livenessProbe:
    httpGet:
      path: /healthz
      port: 5678
    initialDelaySeconds: 45
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 5
  
  readinessProbe:
    httpGet:
      path: /healthz
      port: 5678
    initialDelaySeconds: 20
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

# Main n8n instance configuration
main:
  config:
    # Database configuration - PostgreSQL external
    db:
      type: postgresdb
      postgresdb:
        host: postgres-service
        port: 5432
        user: n8n
        password: n8n_password
        database: n8n
        pool:
          max: 10
        ssl:
          enabled: false
    
    # Queue configuration - Redis connection handled automatically
    executions:
      mode: queue
    
    # Security
    security:
      audit:
        daysAbandonedWorkflow: 90
    
    # N8N specific settings
    n8n:
      hide_usage_page: true
  
  # Secrets configuration
  secret:
    n8n:
      encryption_key: "your-secure-encryption-key-here"
  
  # Resource limits
  resources:
    limits:
      memory: 2048Mi
    requests:
      memory: 512Mi
  
  # Node selector
  nodeSelector:
    server: n8n
  
  # Service configuration with NodePort
  service:
    type: NodePort
    port: 5678
    nodePort: 30200
  
  # Liveness and Readiness Probes configuration
  livenessProbe:
    httpGet:
      path: /healthz
      port: 5678
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 5
    successThreshold: 1
  
  readinessProbe:
    httpGet:
      path: /healthz
      port: 5678
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

# Disable ingress for local setup
ingress:
  enabled: false

# PostgreSQL deployed separately - connection via credentials only